1. To check if you have Aneconda:
$ conda --version
2. To check if it is on your path:
$ echo $PATH
3. To install a package using conda:
$ conda install <package_name>
4. To check to see if you have a package installed in conda:
$ conda list <package_name>
5. A boiler plate:
if __name__ == "__main__":
    hello_world()
basically says, only run this code if the file is being directly run
from the command line, as opposed to being imported as a module
6. Interactive Debugging:
if __name__ == "__main__":
  hello_world()
  a = 22
  import pdb
  pdb.set_trace()
  b = 33
  print add_em_up(3, 4, 5)
pdb.set_trace() opens up an interactive debugger just after it is
called; the code is paused right at that line. a is defined and has
the value 22. b is not defined yet.
To go to the next line we use "n".

OR:
You can launch a Python program through pdb by using pdb myscript.py or python -m pdb myscript.py.
There are a few commands you can then issue, which are documented on the pdb page.
Some useful ones to remember are:

b: set a breakpoint
c: continue debugging until you hit a breakpoint
s: step through the code
n: to go to next line of code
l: list source code for the current file (default: 11 lines including the line being executed)
u: navigate up a stack frame
d: navigate down a stack frame
p: to print the value of an expression in the current context

7. Init git after creating a directory:
Just stay in the directory, and do:
ziru@<new directory> $ git init

8. Python sys path change:
import sys
print (sys.path)
sys.path.append('/Library/Python/2.7/site-packages') # to add to the end of path
sys.path.pop(0) # to remove the first element
